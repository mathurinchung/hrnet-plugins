{"ast":null,"code":"var _jsxFileName = \"/app/react-selectmenu/src/lib/components/SelectMenu.jsx\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport './SelectMenu.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SelectMenu(_ref) {\n  _s();\n  let {\n    id,\n    options,\n    onChange\n  } = _ref;\n  const [visible, setVisible] = useState(false);\n  const [option, setOption] = useState(options[0].option);\n  const handleOption = event => {\n    setOption(event.target.getAttribute('data-option'));\n    const value = event.target.getAttribute('data-value');\n    onChange({\n      currentTarget: {\n        name: id,\n        value\n      }\n    });\n    setVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: id,\n      className: \"select-menu\",\n      type: \"button\",\n      onClick: () => setVisible(!visible),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"select-menu-value\",\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icon-dropdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 62\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), visible && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"select-list\",\n      children: options.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-option\": item.option,\n        \"data-value\": item.value,\n        onClick: handleOption,\n        children: item.option\n      }, item.option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(SelectMenu, \"2/81ea14VRvYyNjNMnK+b5+CFP8=\");\n_c = SelectMenu;\nSelectMenu.propTypes = {\n  id: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport default SelectMenu;\nvar _c;\n$RefreshReg$(_c, \"SelectMenu\");","map":{"version":3,"names":["PropTypes","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SelectMenu","_ref","_s","id","options","onChange","visible","setVisible","option","setOption","handleOption","event","target","getAttribute","value","currentTarget","name","children","className","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","propTypes","string","isRequired","array","func","$RefreshReg$"],"sources":["/app/react-selectmenu/src/lib/components/SelectMenu.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport './SelectMenu.css';\n\nfunction SelectMenu({ id, options, onChange }) {\n  const [ visible, setVisible ] = useState(false);\n  const [ option, setOption ] = useState(options[0].option);\n\n  const handleOption = event => {\n    setOption(event.target.getAttribute('data-option'));\n    const value = event.target.getAttribute('data-value');\n\n    onChange({ currentTarget: { name: id, value } });\n    setVisible(false);\n  };\n\n  return (\n    <>\n      <button id={ id } className=\"select-menu\" type=\"button\" onClick={ () => setVisible(!visible) }>\n        <span className=\"select-menu-value\">{ option }</span><i className=\"icon-dropdown\"></i>\n      </button>\n      { visible && (\n        <ul className=\"select-list\">\n          { options.map(item => <li key={ item.option } data-option={ item.option } data-value={ item.value } onClick={ handleOption }>{ item.option }</li>) }\n        </ul>\n      )}\n    </>\n  );\n}\n\nSelectMenu.propTypes = {\n  id: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default SelectMenu;\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,UAAUA,CAAAC,IAAA,EAA4B;EAAAC,EAAA;EAAA,IAA3B;IAAEC,EAAE;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EAC3C,MAAM,CAAEK,OAAO,EAAEC,UAAU,CAAE,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAEa,MAAM,EAAEC,SAAS,CAAE,GAAGd,QAAQ,CAACS,OAAO,CAAC,CAAC,CAAC,CAACI,MAAM,CAAC;EAEzD,MAAME,YAAY,GAAGC,KAAK,IAAI;IAC5BF,SAAS,CAACE,KAAK,CAACC,MAAM,CAACC,YAAY,CAAC,aAAa,CAAC,CAAC;IACnD,MAAMC,KAAK,GAAGH,KAAK,CAACC,MAAM,CAACC,YAAY,CAAC,YAAY,CAAC;IAErDR,QAAQ,CAAC;MAAEU,aAAa,EAAE;QAAEC,IAAI,EAAEb,EAAE;QAAEW;MAAM;IAAE,CAAC,CAAC;IAChDP,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEV,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA;MAAQM,EAAE,EAAGA,EAAI;MAACe,SAAS,EAAC,aAAa;MAACC,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAGA,CAAA,KAAMb,UAAU,CAAC,CAACD,OAAO,CAAG;MAAAW,QAAA,gBAC5FpB,OAAA;QAAMqB,SAAS,EAAC,mBAAmB;QAAAD,QAAA,EAAGT;MAAM;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAAA3B,OAAA;QAAGqB,SAAS,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CAAC,EACPlB,OAAO,iBACPT,OAAA;MAAIqB,SAAS,EAAC,aAAa;MAAAD,QAAA,EACvBb,OAAO,CAACqB,GAAG,CAACC,IAAI,iBAAI7B,OAAA;QAAwB,eAAc6B,IAAI,CAAClB,MAAQ;QAAC,cAAakB,IAAI,CAACZ,KAAO;QAACM,OAAO,EAAGV,YAAc;QAAAO,QAAA,EAAGS,IAAI,CAAClB;MAAM,GAA1GkB,IAAI,CAAClB,MAAM;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqG,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChJ,CACL;EAAA,eACD,CAAC;AAEP;AAACtB,EAAA,CAxBQF,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AA0BnBA,UAAU,CAAC4B,SAAS,GAAG;EACrBzB,EAAE,EAAET,SAAS,CAACmC,MAAM,CAACC,UAAU;EAC/B1B,OAAO,EAAEV,SAAS,CAACqC,KAAK,CAACD,UAAU;EACnCzB,QAAQ,EAAEX,SAAS,CAACsC,IAAI,CAACF;AAC3B,CAAC;AAED,eAAe9B,UAAU;AAAC,IAAA2B,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}